----------------------------------------------------------------
TEST CASES
----------------------------------------------------------------
						
----------------------------------------------------------------
helper_3.1.1
----------------------------------------------------------------

square_float 6.5;;- : unit = ()
- : float = 42.25

square_float 2.0;;- : unit = ()
- : float = 4.

----------------------------------------------------------------
3.1
----------------------------------------------------------------

distanceR2([3.0;2.0;1.0],[1.0;2.0;3.0]);;- : unit = ()
- : float = 8.

distanceR2([3.0;2.0;1.0],[5.0;5.0;5.0]);;- : unit = ()
- : float = 29.

----------------------------------------------------------------
3.2
----------------------------------------------------------------

distanceAllMeans([1.0;2.0], [[47.698002; 62.480000];[-49.005001; -41.327999];[45.958000; 29.403000];[-60.546001; -50.702000];[45.403000; 52.994999];[-49.021000; -52.053001];[29.788000; 58.993000];[-40.433998; -36.362999];]);;- : unit = ()
- : float list =
[5838.53379079200386; 4377.81562235400179; 2772.146173; 6565.41104309200091;
 4572.11633201; 5423.82735810600116; 4076.95099300000038;
 3188.49588253800539]

distanceAllMeans([99.0;12.0], [[47.698002; 62.480000];[-49.005001; -41.327999];[45.958000; 29.403000];[-60.546001; -50.702000];[45.403000; 52.994999];[-49.021000; -52.053001];[29.788000; 58.993000];[-40.433998; -36.362999];]);;- : unit = ()
- : float list =
[5180.12539879200267; 24749.355798354; 3116.318173; 29386.467239092;
 4553.22835201000089; 26013.0033781060047; 6998.6429930000013;
 21780.8194705380083]

----------------------------------------------------------------
helper_3.3.1
----------------------------------------------------------------

smallestValue [3.0;2.0;1.0];;- : unit = ()
- : float = 1.

smallestValue [1.0;2.0;3.0];;- : unit = ()
- : float = 1.

----------------------------------------------------------------
helper_3.3.2
----------------------------------------------------------------

listMinPosAux([3.0;2.0;1.0], smallestValue [3.0;2.0;1.0]);;- : unit = ()
- : int = 4

listMinPosAux([1.0;2.0;3.0], smallestValue [1.0;2.0;3.0]);;- : unit = ()
- : int = 4

----------------------------------------------------------------
3.3
----------------------------------------------------------------

listMinPos [3.0;2.0;1.0];;- : unit = ()
- : int = 2

listMinPos [1.0;2.0;3.0];;- : unit = ()
- : int = 0

----------------------------------------------------------------
3.4
----------------------------------------------------------------

elsum([3.0;2.0;1.0],[1.0;2.0;3.0]);;- : unit = ()
- : float list = [4.; 4.; 4.]

elsum([1.0;2.0;3.0],[1.0;2.0;3.0]);;- : unit = ()
- : float list = [2.; 4.; 6.]

----------------------------------------------------------------
3.5
----------------------------------------------------------------

scaleList([3.0;2.0;1.0],2);;- : unit = ()
- : float list = [1.5; 1.; 0.5]

scaleList([3.0;2.0;1.0],10);;- : unit = ()
- : float list = [0.3; 0.2; 0.1]

----------------------------------------------------------------
3.6
----------------------------------------------------------------

zeroes 1;;- : unit = ()
- : float list = [0.]

zeroes 2;;- : unit = ()
- : float list = [0.; 0.]

----------------------------------------------------------------
3.7
----------------------------------------------------------------

zeroMeansSet(2,5);;- : unit = ()
- : float list list = [[0.; 0.; 0.; 0.; 0.]; [0.; 0.; 0.; 0.; 0.]]

zeroMeansSet(9,1);;- : unit = ()
- : float list list = [[0.]; [0.]; [0.]; [0.]; [0.]; [0.]; [0.]; [0.]; [0.]]

----------------------------------------------------------------
3.8
----------------------------------------------------------------

zeroVdiff([3.0;2.0;1.0],[3.0;2.0;1.0]);;- : unit = ()
- : bool = true

zeroVdiff([1.0;2.0;3.0],[3.0;2.0;1.0]);;- : unit = ()
- : bool = false

----------------------------------------------------------------
3.9
----------------------------------------------------------------

zeroSetdiff([[-10.0; -4.0]; [-100.0; -24.0]],[[-10.0; -4.0]; [-100.0; -24.0]]);;- : unit = ()
- : bool = true

zeroSetdiff([[-11.0; -4.0]; [-100.1; -24.0]],[[-10.1; -4.0]; [-100.0; -24.1]]);;- : unit = ()
- : bool = false

----------------------------------------------------------------
3.10
----------------------------------------------------------------

zeroCounts 1;;- : unit = ()
- : int list = [0]

zeroCounts 2;;- : unit = ()
- : int list = [0; 0]

----------------------------------------------------------------
3.11
----------------------------------------------------------------

updateCounts(0, [0;0;0;0;0;0]);;- : unit = ()
- : int list = [1; 0; 0; 0; 0; 0]

updateCounts(2, updateCounts(3, [0;0;0;0;0;0]));;- : unit = ()
- : int list = [0; 0; 1; 1; 0; 0]

----------------------------------------------------------------
4.1
----------------------------------------------------------------

updateMeansSum([1.0;2.0;3.0],2,zeroMeansSet(4,3));;- : unit = ()
- : float list list =
[[0.; 0.; 0.]; [0.; 0.; 0.]; [1.; 2.; 3.]; [0.; 0.; 0.]]

updateMeansSum([1.0;2.0;3.0],0,zeroMeansSet(4,3));;- : unit = ()
- : float list list =
[[1.; 2.; 3.]; [0.; 0.; 0.]; [0.; 0.; 0.]; [0.; 0.; 0.]]

----------------------------------------------------------------
4.2
----------------------------------------------------------------

formNewMeans([[100.5];[-29.1]],[3;5]);;- : unit = ()
- : float list list = [[33.5]; [-5.82]]

formNewMeans([[200.0];[30.0]],[2;3]);;- : unit = ()
- : float list list = [[100.]; [10.]]

----------------------------------------------------------------
4.3
----------------------------------------------------------------

reclassify([[-200.0;-100.0];[-100.0;-100.0];[-200.0;-200.0];[-100.0;-200.0];[200.0;100.0];[100.0;100.0];[200.0;200.0];[100.0;200.0]], [[0.0;0.0];[10.0;100.0]], zeroMeansSet(2, 2), zeroCounts(2));;- : float list list = [[-150.; -150.]; [150.; 150.]]

reclassify([[-200.0;-100.0];[-100.0;-100.0];[-200.0;-200.0];[-100.0;-200.0];[200.0;100.0];[100.0;100.0];[200.0;200.0];[100.0;200.0]], [[50.0;30.0];[10.0;0.0]], zeroMeansSet(2, 2), zeroCounts(2));;- : float list list = [[150.; 150.]; [-150.; -150.]]

----------------------------------------------------------------
4.4 -- CMEANS TOP FUNCTION
----------------------------------------------------------------

val h : float list list =
  [[-200.; -100.]; [-100.; -100.]; [-200.; -200.]; [-100.; -200.];
   [200.; 100.]; [100.; 100.]; [200.; 200.]; [100.; 200.]]

cmeans(2, h, [[-50.0;-50.0];[50.0;50.0]]);;- : unit = ()
- : float list list = [[-150.; -150.]; [150.; 150.]]

cmeans(2, h, [[-1.0;-10.0];[20.0;54.0]]);;- : unit = ()
- : float list list = [[-150.; -150.]; [150.; 150.]]

cmeans(2, h, [[-50.0;-0.0];[0.0;100.0]]);;- : unit = ()
- : float list list = [[-150.; -150.]; [150.; 150.]]

cmeans(2, h, [[-123.0;-50.0];[123.0;50.0]]);;- : unit = ()
- : float list list = [[-150.; -150.]; [150.; 150.]]

cmeans(2, h, [[-50.0;-50.0];[40.0;50.0]]);;- : unit = ()
- : float list list = [[-150.; -150.]; [150.; 150.]]